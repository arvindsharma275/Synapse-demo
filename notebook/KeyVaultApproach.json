{
	"name": "KeyVaultApproach",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "python",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "b1ab349b-94c9-4e3e-a93f-930452368a49"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/79bca21f-f9f8-494b-8113-61c6b4c7fab3/resourceGroups/cde-rg-cus-capture-01/providers/Microsoft.Synapse/workspaces/eventhubcapture/bigDataPools/python",
				"name": "python",
				"type": "Spark",
				"endpoint": "https://eventhubcapture.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/python",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"token_library = sc._jvm.com.microsoft.azure.synapse.tokenlibrary.TokenLibrary"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"connection_string = token_library.getSecret(\"eventhubcapturepoc\", \"demo\", \"AzureKeyVault1\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\r\n",
					"from pyspark.sql import SparkSession\r\n",
					" \r\n",
					"# Create a SparkSession with Hadoop configurations\r\n",
					"# start sparsession by passing accesskey of storage account being used for capturing event\r\n",
					"spark = SparkSession.builder \\\r\n",
					"    .appName(\"AvroAnalysis\") \\\r\n",
					".config(\"fs.azure.account.auth.type.cdestgcusdltms01.dfs.core.windows.net\", \"SharedKey\") \\\r\n",
					".config(\"fs.azure.account.key.cdestgcusdltms01.dfs.core.windows.net\", connection_string) \\\r\n",
					"    .getOrCreate()\r\n",
					"\r\n",
					"# Load Avro files into a DataFrame"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Load Avro files into a DataFrame\r\n",
					"avro_df = spark.read.format(\"avro\").load(\"abfss://shipmentcapture@cdestgcusdltms01.dfs.core.windows.net/cde-evh-cus-shipment-01/bookingsreply/*/2023/11/29/*/*/*.avro\")\r\n",
					" \r\n",
					"#avro_df.show()\r\n",
					" \r\n",
					"body_df=avro_df.withColumn(\"Body\",avro_df.Body.cast(\"string\")).select(\"Body\")\r\n",
					"\r\n",
					"#display(body_df)"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def sum(a,b):\r\n",
					"    return a+b"
				]
			}
		]
	}
}