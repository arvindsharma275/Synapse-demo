{
	"name": "ShipmentUpdateDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "parse1"
				},
				{
					"name": "filter2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SequenceNumber as long,",
				"          Offset as string,",
				"          EnqueuedTimeUtc as string,",
				"          SystemProperties as [string,(member0 as long, member1 as double, member2 as string, member3 as binary)],",
				"          Properties as [string,(member0 as long, member1 as double, member2 as string, member3 as binary)],",
				"          Body as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'avro',",
				"     container: 'shipmentcapture',",
				"     wildcardPaths:['cde-evh-cus-shipment-01/shipmentupdates/*/2023/11/29/*/*/*.avro']) ~> source1",
				"source1 filter(SequenceNumber==29526) ~> filter1",
				"filter1 parse(BodyJsonNew = Body ? (eventType as string,",
				"     id as string,",
				"     number as string,",
				"     order as (id as string,",
				"     number as string,",
				"     code as string,",
				"     customerId as string,",
				"     customerCode as string,",
				"     billToCustomerId as string,",
				"     billToCustomerCode as string,",
				"     billToCode as string,",
				"     tenderFromCustomerId as string,",
				"     tenderFromCustomerCode as string,",
				"     activationStatusTerm as string,",
				"     financialStatusTerm as string,",
				"     reasonCodeTerm as string,",
				"     modeTerm as string,",
				"     sizeTerm as string,",
				"     tenderStatusTerm as string,",
				"     divisionTerm as string,     ",
				"     notes as string,     ",
				"     cargoInsurance as (amount as integer,",
				"     currencyCodeTerm as string),     ",
				"     associatedReps as (id as string,",
				"     employeeId as string,",
				"     employeeCode as string,",
				"     customerRepTypeTerm as string,",
				"     main as boolean,",
				"     firstName as string,",
				"     lastName as string,     ",
				"     createdBy as string,",
				"     createdDateTime as integer,",
				"     lastUpdatedBy as string,",
				"     lastUpdatedDateTime as integer)[],     ",
				"     commodities as (id as string,",
				"     code as string,",
				"     description as string,",
				"     expectedWeight as (unitTerm as string,",
				"     value as integer),     ",
				"     createdBy as string,",
				"     createdDateTime as integer,",
				"     lastUpdatedBy as string,",
				"     lastUpdatedDateTime as integer,",
				"     stops as (id as string,",
				"     code as string)[],     ",
				"     commodityValue as (unitTerm as string,",
				"     value as integer),",
				"     associatedStops as (id as string,",
				"     code as string)[])[],",
				"     associatedStops as (id as string,",
				"     code as string)[],",
				"     totalDistance as (unit as string,",
				"     value as integer),     ",
				"     createdBy as string,",
				"     createdDateTime as integer,",
				"     lastUpdatedBy as string,",
				"     lastUpdatedDateTime as integer,     ",
				"     orderLifeCycleStatus as string,",
				"     source as string,",
				"     isFinancialDisable as boolean,     ",
				"     isMasteredSystem as boolean),",
				"     stops as (id as string,",
				"     code as string,",
				"     sequenceNumber as integer,",
				"     facilityId as string,",
				"     facilityCode as string,",
				"     facilityAddresses as (id as string,",
				"     typeTerm as string,",
				"     street1 as string,",
				"     street2 as string,",
				"     city as string,",
				"     state as string,",
				"     country as string,",
				"     postalCode as string,",
				"     isMain as boolean)[],",
				"     timezone as string,",
				"     typeTerm as string,",
				"     loadFromTerm as string,",
				"     availableStartDateTime as integer,",
				"     availableEndDateTime as integer,",
				"     scheduleTypeTerm as string,",
				"     liveDropTerm as string,",
				"     workTerm as string,",
				"     notes as string,",
				"     requestedDate as string,     ",
				"     appointmentChangeReason as (id as string,",
				"     createdDateTime as integer,",
				"     changedById as string,     ",
				"     mappedCustomerCode as string),     ",
				"     isOrderStop as boolean,",
				"     createdBy as string,",
				"     createdDateTime as integer,",
				"     lastUpdatedBy as string,",
				"     lastUpdatedDateTime as integer,",
				"     location as (territory as (city as string,",
				"     state as string),",
				"     facility as (id as string,",
				"     code as string,",
				"     name as string),",
				"     address as (typeTerm as string,",
				"     street1 as string,",
				"     street2 as string,",
				"     country as string,",
				"     postalCode as string,",
				"     latitude as integer,",
				"     longitude as integer,",
				"     coordinates as (latitude as integer,",
				"     longitude as integer),",
				"     city as string,",
				"     state as string,",
				"     county as string),",
				"     timezone as string))[],",
				"     route as (id as string,",
				"     number as string,",
				"     activationStatusTerm as string,",
				"     lifeCycleStatusTerm as string,",
				"     modeTerm as string,",
				"     sizeTerm as string,",
				"     typeTerm as string,",
				"     isHotRoute as boolean,",
				"     divisionTerm as string,",
				"     maxCost as (amount as integer,",
				"     currencyCodeTerm as string),     ",
				"     associatedStops as (id as string,",
				"     code as string)[],",
				"     cargoInsurance as (amount as integer,",
				"     currencyCodeTerm as string),     ",
				"     createdBy as string,",
				"     createdDateTime as integer,",
				"     lastUpdatedBy as string,",
				"     lastUpdatedDateTime as integer),",
				"     routes as (id as string,",
				"     number as string,",
				"     activationStatusTerm as string,",
				"     lifeCycleStatusTerm as string,",
				"     modeTerm as string,",
				"     sizeTerm as string,",
				"     typeTerm as string,",
				"     isHotRoute as boolean,",
				"     divisionTerm as string,          ",
				"     distance as (value as integer,",
				"     unitTerm as string),     ",
				"     maxCost as (amount as integer,",
				"     currencyCodeTerm as string),     ",
				"     associatedStops as (id as string,",
				"     code as string)[],",
				"     cargoInsurance as (amount as integer,",
				"     currencyCodeTerm as string),     ",
				"     createdBy as string,",
				"     createdDateTime as integer,",
				"     lastUpdatedBy as string,",
				"     lastUpdatedDateTime as integer)[],     ",
				"     createdBy as string,",
				"     createdDateTime as integer,",
				"     lastUpdatedBy as string,",
				"     lastUpdatedDateTime as integer,",
				"     masterMindDistance as (unitTerm as string,",
				"     value as integer)[]     ",
				"     )[],",
				"     format: 'json',",
				"     documentForm: 'documentPerLine') ~> parse1",
				"parse1 filter(BodyJsonNew[1].order.number=='4000130139') ~> filter2",
				"filter2 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     keys:['SequenceNumber','Offset','EnqueuedTimeUtc','SystemProperties','Properties','Body','BodyJsonNew'],",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}